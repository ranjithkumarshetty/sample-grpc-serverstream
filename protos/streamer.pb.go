// Code generated by protoc-gen-go. DO NOT EDIT.
// source: streamer.proto

/*
Package protos is a generated protocol buffer package.

It is generated from these files:
	streamer.proto

It has these top-level messages:
	Message
*/
package protos

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Message struct {
	Msg string `protobuf:"bytes,1,opt,name=msg" json:"msg,omitempty"`
}

func (m *Message) Reset()                    { *m = Message{} }
func (m *Message) String() string            { return proto.CompactTextString(m) }
func (*Message) ProtoMessage()               {}
func (*Message) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Message) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func init() {
	proto.RegisterType((*Message)(nil), "protos.Message")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Streamer service

type StreamerClient interface {
	StreamMessages(ctx context.Context, in *Message, opts ...grpc.CallOption) (Streamer_StreamMessagesClient, error)
}

type streamerClient struct {
	cc *grpc.ClientConn
}

func NewStreamerClient(cc *grpc.ClientConn) StreamerClient {
	return &streamerClient{cc}
}

func (c *streamerClient) StreamMessages(ctx context.Context, in *Message, opts ...grpc.CallOption) (Streamer_StreamMessagesClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_Streamer_serviceDesc.Streams[0], c.cc, "/protos.Streamer/StreamMessages", opts...)
	if err != nil {
		return nil, err
	}
	x := &streamerStreamMessagesClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Streamer_StreamMessagesClient interface {
	Recv() (*Message, error)
	grpc.ClientStream
}

type streamerStreamMessagesClient struct {
	grpc.ClientStream
}

func (x *streamerStreamMessagesClient) Recv() (*Message, error) {
	m := new(Message)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// Server API for Streamer service

type StreamerServer interface {
	StreamMessages(*Message, Streamer_StreamMessagesServer) error
}

func RegisterStreamerServer(s *grpc.Server, srv StreamerServer) {
	s.RegisterService(&_Streamer_serviceDesc, srv)
}

func _Streamer_StreamMessages_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(Message)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(StreamerServer).StreamMessages(m, &streamerStreamMessagesServer{stream})
}

type Streamer_StreamMessagesServer interface {
	Send(*Message) error
	grpc.ServerStream
}

type streamerStreamMessagesServer struct {
	grpc.ServerStream
}

func (x *streamerStreamMessagesServer) Send(m *Message) error {
	return x.ServerStream.SendMsg(m)
}

var _Streamer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protos.Streamer",
	HandlerType: (*StreamerServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "StreamMessages",
			Handler:       _Streamer_StreamMessages_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "streamer.proto",
}

func init() { proto.RegisterFile("streamer.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 106 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2b, 0x2e, 0x29, 0x4a,
	0x4d, 0xcc, 0x4d, 0x2d, 0xd2, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x03, 0x53, 0xc5, 0x4a,
	0xd2, 0x5c, 0xec, 0xbe, 0xa9, 0xc5, 0xc5, 0x89, 0xe9, 0xa9, 0x42, 0x02, 0x5c, 0xcc, 0xb9, 0xc5,
	0xe9, 0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0x9c, 0x41, 0x20, 0xa6, 0x91, 0x13, 0x17, 0x47, 0x30, 0x54,
	0x9b, 0x90, 0x19, 0x17, 0x1f, 0x84, 0x0d, 0x55, 0x5e, 0x2c, 0xc4, 0x0f, 0x31, 0xaa, 0x58, 0x0f,
	0x2a, 0x22, 0x85, 0x2e, 0xa0, 0xc4, 0x60, 0xc0, 0x98, 0x04, 0xb1, 0xc8, 0x18, 0x10, 0x00, 0x00,
	0xff, 0xff, 0xf3, 0x6c, 0xab, 0x50, 0x81, 0x00, 0x00, 0x00,
}
